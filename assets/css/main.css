html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 2.5rem}hr{box-sizing:content-box;height:0;overflow:visible}button,input,optgroup,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:.0625rem dotted ButtonText}fieldset{border:.0625rem solid silver;margin:0 .125rem;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-.125rem}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}@font-face{font-family:gotham;src:url(../fonts/Gotham-Book.eot);src:url(../fonts/Gotham-Book.eot?#iefix) format("embedded-opentype"),url(../fonts/Gotham-Book.woff2) format("woff2"),url(../fonts/Gotham-Book.woff) format("woff"),url(../fonts/Gotham-Book.ttf) format("truetype"),url(../fonts/Gotham-Book.svg#Gotham-Book) format("svg");font-weight:400;font-style:normal}@font-face{font-family:sf-mono-light;src:url(../fonts/sfmono-light-webfont.woff2) format("woff2"),url(../fonts/sfmono-light-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:sf-mono-regular;src:url(../fonts/sfmono-regular-webfont.woff2) format("woff2"),url(../fonts/sfmono-regular-webfont.woff) format("woff");font-weight:400;font-style:normal}*{box-sizing:border-box}body,h1,h2,h3,h4,h5,h6,html,p{margin:0;padding:0}body,html{height:100%;line-height:1.54}body{background:#f7f7f7;font-family:sf-mono-regular,monospace;letter-spacing:.0625rem}body .wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-height:100%}body ::-moz-selection{background:#ebe8db}body ::selection{background:#ebe8db}body a{color:#c0b58c}body p{font-size:1rem}body h1{font-size:3rem;margin-bottom:1.25rem;font-weight:400}body h1,body h2{font-family:gotham,sans-serif;text-transform:uppercase}body h2{font-size:1.5rem}body h3{font-family:gotham,sans-serif;font-size:1.125rem;margin-bottom:1.25rem;font-weight:400;color:#606060}body h3.title{text-transform:uppercase;font-size:.625rem;color:#969696;padding-bottom:1.875rem}section .container{display:flex;flex-flow:row wrap;max-width:57.5rem;margin-left:auto;margin-right:auto;padding:0 2.5rem}@media screen and (min-width:87.5rem){body .wrapper{-ms-flex-direction:row;flex-direction:row}body .wrapper section.terminal--section{position:relative;bottom:inherit;-ms-flex:0 0 50%;flex:0 0 50%}}.header--nav-bar{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;padding-bottom:1.875rem}.header--nav-bar img{height:1.75rem!important}main.main--section{color:#2d2d2d;-ms-flex:1;flex:1;padding:2.5rem 5rem;overflow:auto;height:100vh}main.main--section p{margin-top:2.5rem;color:#2d2d2d;max-width:45rem}main.main--section p+p{margin-top:2.5rem}main.main--section h1{margin-left:-.1875rem}main.main--section h2{margin-top:5rem}main.main--section h3{color:#2d2d2d;text-transform:uppercase;font-weight:500;font-size:1rem;margin-top:5rem}main.main--section h3+p{margin-top:1.25rem}main.main--section code{background-color:#fff;padding:.125rem .5rem;white-space:pre-wrap}main.main--section pre{background:#fff;padding:1.875rem;margin-top:5rem;color:#666}main.main--section pre>code{padding:0}main.main--section img{height:3.125rem;margin-right:2.5rem}main.main--section img:last-of-type{margin-right:0}@media screen and (max-width:87.5rem){main.main--section{padding:2.5rem 3.75rem;-ms-flex-order:2;order:2;height:auto}}section.terminal--section{display:block;position:relative;height:auto;background:url(../images/workspace.jpg);background-size:cover;background-repeat:no-repeat;color:#fff;margin:0;padding-bottom:2.5rem}section.terminal--section:after{position:absolute;content:"";height:100%;width:100%;top:0;left:0;background:#000;background:rgba(0,0,0,.85);z-index:1}section.terminal--section pre{position:relative;white-space:pre-wrap;margin:0;padding:1.25rem 1.25rem 1.25rem 3.75rem;z-index:2}section.terminal--section pre code{font-family:sf-mono-light,monospace;font-size:.875rem}section.terminal--section pre code span.terminal--bash{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}section.terminal--section pre code span.terminal--comment{color:#636363}section.terminal--section pre code span.git-repo--link{cursor:pointer}section.terminal--section pre code span.git-repo--link:hover{color:#636363}section.terminal--section pre code span.terminal--cursor{opacity:0;-webkit-animation:a 1s infinite;animation:a 1s infinite;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@-webkit-keyframes a{0%{opacity:0}40%{opacity:0}50%{opacity:1}90%{opacity:1}to{opacity:0}}@keyframes a{0%{opacity:0}40%{opacity:0}50%{opacity:1}90%{opacity:1}to{opacity:0}}section.terminal--section pre:before{position:absolute;content:"";display:block;width:.0625rem;height:100%;background:#2d2d2d;left:1.875rem}.copy-notification{position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);display:none;color:#2d2d2d;padding:.625rem 1.25rem}.copy-notification.success{background:#c0b58c}.copy-notification.error{background:#f97575}@media screen and (max-width:87.5rem){.copy-notification{top:0;-webkit-transform:translate(-50%);transform:translate(-50%)}}
/*# sourceMappingURL=data:application/json;base64, */
